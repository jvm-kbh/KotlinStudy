package com.kbh.study.generic

/**
 * 코틀린과 자바의 제네릭의 차이는 선언처 가변성뿐만이 아니다.
 * 자바에서는 모든 타입의 제네릭 객체를 받아서 읽기전용으로 사용할 수 있도록 만들기위해 "?"(와일드카드)를 사용한다.
 * 코틀린에서 파라미터 타입을 정의하는 스타프로젝션 "<*>"은 제네릭의 읽기 전용타입과 raw type(원천 타입)위한 코틀린의 기능이다.
 *
 * 주 용도는 타입에 대해 정확히 파익이 불가하고 타입안정서을 유지하면서 파라미터를 전달할 때 사용된다.
 * 해당 스타 프로젝션이 쓰인 곳에서는 어떤 변경도 허용되지 않는다.
 *
 * 가령 파라미터를 Array<T> 와 같은 방식으로 printValues()내 파라미터를 사용했다면 error 코드는 컴파일이 가능했다.
 * 이렇게되면 해당 컬렉션은 변경이 가능하므로 불변성을 지키기 어렵다.
 *
 * <out T> 와 동일하지만 더 간결하게 작성될 수 있다.
 * 스타프로젝션은 선언처 가변성으로 사용된다면 <in Nothing>과 동일하다.
 *
 * 변경을 방지하고 안정성을 제공한다는 점을 기억하자.
 */
fun printValues(values: Array<*>){
    for (value in values){
        println(value)
    }
    // values[0] = values[1] -- error
}
fun main() {
    printValues(arrayOf(1,2))
}